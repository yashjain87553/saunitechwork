<?php

/**
 * Created by Magenest.
 * User: trongpq
 * Date: 3/2/18
 * Time: 10:27
 * Email: trongpq@magenest.com
 */

namespace Magenest\GiftRegistry\Ui\DataProvider\Order;

use Magento\Framework\Api\FilterBuilder;
use Magento\Framework\Api\Search\ReportingInterface;
use Magento\Framework\Api\Search\SearchCriteriaBuilder;
use Magento\Framework\App\RequestInterface;
use Magento\Ui\DataProvider\AbstractDataProvider;
use Magenest\GiftRegistry\Model\ResourceModel\Tran\CollectionFactory;
use Magento\Sales\Model\OrderFactory;

/**
 * Class TransactionDataProvider
 * @package Magenest\GiftRegistry\Ui\DataProvider\Order
 */
class TransactionDataProvider extends \Magento\Framework\View\Element\UiComponent\DataProvider\DataProvider
{

    /**
     * @var OrderFactory
     */
    protected $orderFactory;

    protected $collection;
    public function __construct(
        $name,
        $primaryFieldName,
        $requestFieldName,
        ReportingInterface $reporting,
        SearchCriteriaBuilder $searchCriteriaBuilder,
        RequestInterface $request,
        FilterBuilder $filterBuilder,
        \Magento\Sales\Model\OrderFactory $order,
        \Magenest\GiftRegistry\Model\ResourceModel\Tran\Collection $collectionFactory,
        array $meta = [],
        array $data = []

    ) {
        parent::__construct($name, $primaryFieldName, $requestFieldName, $reporting, $searchCriteriaBuilder, $request, $filterBuilder, $meta, $data);
        $this->orderFactory = $order;
        $this->collection = $collectionFactory;
    }

    /**
     * @return array
     */
//    public function getData()
//    {
//        $items = [];
//        foreach ($this->collection->getDataCollection()->getItems() as $attribute) {
//            $data = $attribute->toArray();
//            /** @var \Magento\Sales\Model\Order $order */
//            $order = $this->orderFactory->create()->load($data['order_id']);
//            $data['first_name'] = $order->getBillingAddress()->getFirstname();
//            $data['last_name'] = $order->getBillingAddress()->getLastname();
//            $data['email'] = $order->getCustomerEmail();
//            $items[] = $data;
//        }
//
//        return [
//            'totalRecords' => $this->collection->getSize(),
//            'items' => $items
//        ];
//    }


    public function getSearchResult()
    {
        $result = parent::getSearchResult(); // TODO: Change the autogenerated stub
        $result->getSelect()->joinLeft(
            ["sales_order" => $result->getTable("sales_order_grid")],
            "main_table.order_id = sales_order.entity_id",
            ["customer_email","billing_name"]
        );

        return $result;
    }

    public function addFilter(\Magento\Framework\Api\Filter $filter)
    {
        if($filter->getField()=="status"){
            $filter->setField("main_table.status");
        }
        parent::addFilter($filter); // TODO: Change the autogenerated stub
    }


}
